const END_STATE = 99;
const input = [
  // 1002, 4, 3, 4, 33
  // 1101, 100, -1, 4, 0
  // 3,9,8,9,10,9,4,9,99,-1,8
  // 3,9,7,9,10,9,4,9,99,-1,8
  // 3,3,1108,-1,8,3,4,3,99
  // 3,3,1107,-1,8,3,4,3,99
  // 3,12,6,12,15,1,13,14,13,4,13,99,-1,0,1,9
  // 3,3,1105,-1,9,1101,0,0,12,4,12,99,1
  // 3,21,1008,21,8,20,1005,20,22,107,8,21,20,1006,20,31,1106,0,36,98,0,0,1002,21,125,20,4,20,1105,1,46,104,999,1105,1,46,1101,1000,1,20,4,20,1105,1,46,98,99

  // real input
  3,225,1,225,6,6,1100,1,238,225,104,0,1002,36,25,224,1001,224,-2100,224,4,224,1002,223,8,223,101,1,224,224,1,223,224,223,1102,31,84,225,1102,29,77,225,1,176,188,224,101,-42,224,224,4,224,102,8,223,223,101,3,224,224,1,223,224,223,2,196,183,224,1001,224,-990,224,4,224,1002,223,8,223,101,7,224,224,1,224,223,223,102,14,40,224,101,-1078,224,224,4,224,1002,223,8,223,1001,224,2,224,1,224,223,223,1001,180,64,224,101,-128,224,224,4,224,102,8,223,223,101,3,224,224,1,223,224,223,1102,24,17,224,1001,224,-408,224,4,224,1002,223,8,223,101,2,224,224,1,223,224,223,1101,9,66,224,1001,224,-75,224,4,224,1002,223,8,223,1001,224,6,224,1,223,224,223,1102,18,33,225,1101,57,64,225,1102,45,11,225,1101,45,9,225,1101,11,34,225,1102,59,22,225,101,89,191,224,1001,224,-100,224,4,224,1002,223,8,223,1001,224,1,224,1,223,224,223,4,223,99,0,0,0,677,0,0,0,0,0,0,0,0,0,0,0,1105,0,99999,1105,227,247,1105,1,99999,1005,227,99999,1005,0,256,1105,1,99999,1106,227,99999,1106,0,265,1105,1,99999,1006,0,99999,1006,227,274,1105,1,99999,1105,1,280,1105,1,99999,1,225,225,225,1101,294,0,0,105,1,0,1105,1,99999,1106,0,300,1105,1,99999,1,225,225,225,1101,314,0,0,106,0,0,1105,1,99999,8,226,677,224,1002,223,2,223,1006,224,329,1001,223,1,223,108,226,226,224,1002,223,2,223,1006,224,344,1001,223,1,223,7,677,226,224,102,2,223,223,1005,224,359,101,1,223,223,7,226,677,224,102,2,223,223,1006,224,374,101,1,223,223,1008,677,226,224,1002,223,2,223,1006,224,389,101,1,223,223,8,677,677,224,1002,223,2,223,1005,224,404,101,1,223,223,8,677,226,224,102,2,223,223,1005,224,419,1001,223,1,223,1107,677,226,224,102,2,223,223,1005,224,434,1001,223,1,223,1107,226,677,224,1002,223,2,223,1006,224,449,1001,223,1,223,107,677,226,224,1002,223,2,223,1005,224,464,1001,223,1,223,1008,677,677,224,1002,223,2,223,1006,224,479,1001,223,1,223,1108,677,226,224,1002,223,2,223,1006,224,494,1001,223,1,223,1108,677,677,224,1002,223,2,223,1006,224,509,1001,223,1,223,107,677,677,224,1002,223,2,223,1005,224,524,101,1,223,223,1007,677,226,224,102,2,223,223,1005,224,539,1001,223,1,223,1107,226,226,224,1002,223,2,223,1006,224,554,1001,223,1,223,1008,226,226,224,1002,223,2,223,1006,224,569,101,1,223,223,1108,226,677,224,1002,223,2,223,1006,224,584,101,1,223,223,108,677,677,224,1002,223,2,223,1006,224,599,1001,223,1,223,1007,677,677,224,102,2,223,223,1006,224,614,101,1,223,223,107,226,226,224,102,2,223,223,1006,224,629,101,1,223,223,1007,226,226,224,102,2,223,223,1005,224,644,1001,223,1,223,108,226,677,224,102,2,223,223,1005,224,659,1001,223,1,223,7,677,677,224,102,2,223,223,1006,224,674,1001,223,1,223,4,223,99,226
];
const program = {};

const runProgram = (input) => {
  for (let i = 0; i < input.length; i++) {
    program[i] = input[i];
  }

  let pointer = 0;

  while (program[pointer] !== END_STATE) {
    let opcode = program[pointer];

    // get our opcode into a list of parts
    let parts = opcode.toString().split('').map(Number);
    while (parts.length < 5) {
      parts = [0, ...parts];
    }
    let code = parts[4];

    // get our parameters
    let x = program[program[pointer + 1]];
    if (parts[2] === 1) {
      x = program[pointer + 1];
    }
    let y = program[program[pointer + 2]];
    if (parts[1] === 1) {
      y = program[pointer + 2];
    }

    let z = program[pointer + 3];

    let jumped = false;

    if (code === 1) {  
      program[program[pointer + 3]] = x + y;
    } else if (code === 2) {
      program[program[pointer + 3]] = x * y;
    } else if (code === 3) {
      // Part 1 - input is 1;
      // Part 2 - input is 5;
      program[program[pointer + 1]] = 5;
    } else if (code === 4) {
      console.log('CODE:', program[program[pointer + 1]]);
    } else if (code === 5) {
      if (x !== 0) {
        jumped = true;
        pointer = y;
      }
    } else if (code === 6) {
      if (x === 0) {
        jumped = true;
        pointer = y;
      }
    } else if (code === 7) {
      if (x < y) {
        program[z] = 1;
      } else {
        program[z] = 0;
      }
    } else if (code === 8) {
      if (x === y) {
        program[z] = 1;
      } else {
        program[z] = 0;
      }
    } else {
      console.log('fail at pointer', pointer);
      return;
    }

    if (!jumped) {
      if (code === 1 || code === 2) {
        pointer += 4;
      } else if (code === 3 || code === 4) {
        pointer += 2;
      } else if (code === 5 || code === 6) {
        pointer += 3;
      } else if (code === 7 || code === 8) {
        pointer += 4;
      }
    }
  }
}

runProgram(input);
